/* YourDuino Multiple DS18B20 Temperature Sensors on 1 wire
  Connections:
  DS18B20 Pinout (Left to Right, pins down, flat side toward you)
  - Left   = Ground
  - Center = Signal (Pin 2):  (with 3.3K to 4.7K resistor to +5 or 3.3 )
  - Right  = +5 or +3.3 V

   Questions: terry@yourduino.com 
   V1.01  01/17/2013 ...based on examples from Rik Kretzinger
   
/*-----( Import needed libraries )-----*/
// Get 1-wire Library here: http://www.pjrc.com/teensy/td_libs_OneWire.html
#include <OneWire.h>

//Get DallasTemperature Library here:  http://milesburton.com/Main_Page?title=Dallas_Temperature_Control_Library
#include <DallasTemperature.h>



/*-----( Declare objects )-----*/
// Setup a oneWire instance to communicate with any OneWire devices
OneWire oneWire(ONE_WIRE_BUS_PIN);

// Pass our oneWire reference to Dallas Temperature.
DallasTemperature sensors(&oneWire);

/*-----( Declare Variables )-----*/
// Assign the addresses of your 1-Wire temp sensors.
// See the tutorial on how to obtain these addresses:
// http://www.hacktronics.com/Tutorials/arduino-1-wire-address-finder.html

DeviceAddress Probe01 = { 0x28, 0xFF, 0xE6, 0x9F, 0x30, 0x17, 0x04, 0x48 }; 
DeviceAddress Probe02 = { 0x28, 0xFF, 0xCB, 0xDB, 0x30, 0x17, 0x04, 0xB2 };

/*-----( Declare Constants and Pin Numbers )-----*/
#define ONE_WIRE_BUS_PIN 4
#define HEAT 13
#define COOL 14
#define REST 12

// Nye parameter/variabler som brukes til temp regulering/styring
#define float tempAvvik
#define float settPunkt
#define boolean heatTrue
#define float tempProbe01
#define float tempProbe02
#define boolean heating
#define float sP
#define float tempProbe


void setup()   /****** SETUP: RUNS ONCE ******/
{
  // start serial port to show results
  Serial.begin(9600);
  Serial.print("Initializing Temperature Control Library Version ");
  Serial.println(DALLASTEMPLIBVERSION);
  
  // Initialize the Temperature measurement library
  sensors.begin();
  
  // set the resolution to 10 bit (Can be 9 to 12 bits .. lower is faster)
  sensors.setResolution(Probe01, 10);
  sensors.setResolution(Probe02, 10);

  // Initialize relay for heat, cool
  pinMode(HEAT, OUTPUT);
  pinMode(COOL, OUTPUT);
  pinMode(REST, OUTPUT);

}

void loop()   /****** LOOP: RUNS CONSTANTLY ******/
{
  delay(5000);
  Serial.println();
  Serial.print("Number of Devices found on bus = ");  
  Serial.println(sensors.getDeviceCount());   
  Serial.print("Getting temperatures... ");  
  Serial.println();   
  
  // Command all devices on bus to read temperature  
  sensors.requestTemperatures();  
  
  Serial.print("Probe 01 temperature is:   ");
  tempProbe01 = getTemperature(Probe01); // Kaller funksjonen og får en tempavlesing tilbake
  Serial.println();

  Serial.print("Probe 02 temperature is:   ");
  tempProbe02 = getTemperature(Probe02); // Kaller funksjon og får en tempavlesing tilbake
  Serial.println();
  
  heating = tempStyring(settPunkt, tempProbe01); // Kaller tempstyringsfunksjon
  
  // Logikk for å sette temp element eller kjøling henholdsvis høy eller lav
  if (heating == true) {
     //Sett utgang til temp element høy
     //Sett utgang til kjøling lav
     }
  else{
    //Sett utgang til temp element lav
    //Sett utgang til kjøling lav
    }
   
}

/*-----( Funksjonsdeklarering )-----*/

boolean tempStyring(sP, tempProbe){ 
// Funksjon for styring av temperatur. Dersom avviket er positivt så må temperaturen i skapet økes. 
// Dersom avviket er negativt så må temperaturen reduseres. 

tempAvvik = sP - tempProbe; 

  if ( tempAvvik >= 0) {
    heatTrue = true;
    }
  else
    {
    heatTrue = false;
    }
    
 return heatTrue;
  
}

float getTemperature(DeviceAddress deviceAddress) // Endret til å returnere en float verdi
{

 float tempC = sensors.getTempC(deviceAddress);

   if (tempC == -127.00) 
   {
   Serial.print("Error getting temperature  ");
   } 
   else
   {
   Serial.print("C: ");
   Serial.print(tempC);
   }
   
 return tempC;   // Returnert verdi
}// End printTemperature
//*********( THE END )***********
